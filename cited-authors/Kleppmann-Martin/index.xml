<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kleppmann, Martin on Chege's Blog</title><link>https://www.curiosities.dev/cited-authors/Kleppmann-Martin/</link><description>Recent content in Kleppmann, Martin on Chege's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 28 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://www.curiosities.dev/cited-authors/Kleppmann-Martin/index.xml" rel="self" type="application/rss+xml"/><item><title>Relational Model Versus Document Model</title><link>https://www.curiosities.dev/computer-science/klepmann-ddia/01-foundations-of-data-systems/02-data-models-and-query-languages/relational-model-vs-document-model/</link><pubDate>Sun, 28 May 2023 00:00:00 +0000</pubDate><guid>https://www.curiosities.dev/computer-science/klepmann-ddia/01-foundations-of-data-systems/02-data-models-and-query-languages/relational-model-vs-document-model/</guid><description>A relational data model uses tables that consist of rows and columns. A row can be uniquely identified by a table + ID combination. A column entry can reference another row in another table through a shared key. One goal is to avoid duplicating data. However, to answer a real-world query, we end up paying th cost by joining results from multiple tables. That said, with proper indexing and prior research, combining results is pretty fast.</description></item><item><title>Designing Data-Intensive Applications [Book]</title><link>https://www.curiosities.dev/computer-science/klepmann-ddia/</link><pubDate>Thu, 16 Mar 2017 00:00:00 +0000</pubDate><guid>https://www.curiosities.dev/computer-science/klepmann-ddia/</guid><description> Designing Data-Intensive Applications: The big ideas behind reliable, scalable, and maintainable systems. Kleppmann, Martin. Mar 16, 2017.</description></item></channel></rss>