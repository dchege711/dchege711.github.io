<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Reilly, Tanya on Chege's Blog</title><link>https://www.curiosities.dev/cited-authors/Reilly-Tanya/</link><description>Recent content in Reilly, Tanya on Chege's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 22 Nov 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://www.curiosities.dev/cited-authors/Reilly-Tanya/index.xml" rel="self" type="application/rss+xml"/><item><title>Why Have We Stopped?</title><link>https://www.curiosities.dev/computer-science/swe-in-practice/why-have-we-stopped/</link><pubDate>Fri, 22 Nov 2024 00:00:00 +0000</pubDate><guid>https://www.curiosities.dev/computer-science/swe-in-practice/why-have-we-stopped/</guid><description>Stuck in Traffic Thinking through both sides of these scenarios can help me reduce the times when I (or my team) is the blocker.
Blocked By Another Team Understand and explain. Why is the work is important? What do you want from them and by when? Give them another chance to indicate feasibility and/or alternatives.
Make the work easier. Can you ask for a smaller subset of features?</description></item><item><title>Leading Big Projects</title><link>https://www.curiosities.dev/computer-science/swe-in-practice/leading-big-projects/</link><pubDate>Sat, 16 Nov 2024 00:00:00 +0000</pubDate><guid>https://www.curiosities.dev/computer-science/swe-in-practice/leading-big-projects/</guid><description>Create clarity for everyone such that they know what they need to do and how it fits into the bigger picture. Communicate openly. Give team members a stage to be publicly competent. Pick up the grunt work that others might not find enjoyable. Allocate time for support work, e.g., reviewing user feedback and error reports. Usually, the reason a project is difficult isn&amp;rsquo;t that you&amp;rsquo;re pushing the boundaries of technology, it&amp;rsquo;s that you&amp;rsquo;re dealing with ambiguity: unclear direction; messy, complicated humans; or legacy systems with behavior you can&amp;rsquo;t predict.</description></item><item><title>Finite Time as a SWE</title><link>https://www.curiosities.dev/computer-science/swe-in-practice/finite-time-swe/</link><pubDate>Sun, 20 Oct 2024 00:00:00 +0000</pubDate><guid>https://www.curiosities.dev/computer-science/swe-in-practice/finite-time-swe/</guid><description>Deliberately choose what to work on. Part of that is getting priority communicated by interested shareholders.
Empower less-experienced engineers so that they&amp;rsquo;re confident tackling different problems instead of me having to pick up said problems.
Improve my investigation and writing skills so that I can give folks enough context to execute on their own. Mostly communicating intent and trusting others to figure out the nitty gritty details.
Origins of Projects You&amp;rsquo;re invited to join.</description></item></channel></rss>