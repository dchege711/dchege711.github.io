<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Science, MIT Computer on Chege's Blog</title><link>https://www.curiosities.dev/cited-authors/Science-MIT-Computer/</link><description>Recent content in Science, MIT Computer on Chege's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 16 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://www.curiosities.dev/cited-authors/Science-MIT-Computer/index.xml" rel="self" type="application/rss+xml"/><item><title>06. Version Control (Git)</title><link>https://www.curiosities.dev/computer-science/the-missing-cs-semester/06-version-control-git/</link><pubDate>Fri, 16 Oct 2020 00:00:00 +0000</pubDate><guid>https://www.curiosities.dev/computer-science/the-missing-cs-semester/06-version-control-git/</guid><description>Version Control Systems track changes to a folder and its contents in a series of snapshots. Each snapshot encapsulates the entire state of files/folders within a top-level directory.
Git&amp;rsquo;s interface is a leaky abstraction. While the interface is at times ugly, its underlying design and ideas are beautiful. A bottom-up explanation of Git therefore makes more sense.
The abstraction is leaky in the sense that to wield it effectively, the user must understand the underlying data model, e.</description></item></channel></rss>