<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Metz, Sandi on Chege's Blog</title><link>https://www.curiosities.dev/cited-authors/Metz-Sandi/</link><description>Recent content in Metz, Sandi on Chege's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 05 Jul 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://www.curiosities.dev/cited-authors/Metz-Sandi/index.xml" rel="self" type="application/rss+xml"/><item><title>Of Code Smells and Hygiene</title><link>https://www.curiosities.dev/computer-science/miscellaneous/2020-07-05-code-smells-and-hygiene/</link><pubDate>Sun, 05 Jul 2020 00:00:00 +0000</pubDate><guid>https://www.curiosities.dev/computer-science/miscellaneous/2020-07-05-code-smells-and-hygiene/</guid><description>Pick up from:
IEEE&amp;rsquo;s International Conference on Software Maintenance Improving Code: The (Mis)perception of Quality Metrics Springer&amp;rsquo;s Software Quality Journal On Abstractions If you find yourself adding more parameters and if-statements to an existing abstraction, is the abstraction still apt? Why not remove the old abstraction and re-extract a new [more apt] abstraction? Devs frequently succumb to the sunken cost fallacy thinking that there must have been a reason that the code was written in a certain way.</description></item></channel></rss>