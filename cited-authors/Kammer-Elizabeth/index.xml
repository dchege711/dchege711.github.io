<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kammer, Elizabeth on Chege's Blog</title><link>https://www.curiosities.dev/cited-authors/Kammer-Elizabeth/</link><description>Recent content in Kammer, Elizabeth on Chege's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 16 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://www.curiosities.dev/cited-authors/Kammer-Elizabeth/index.xml" rel="self" type="application/rss+xml"/><item><title>Productivity for Software Engineers</title><link>https://www.curiosities.dev/computer-science/swe-in-practice/2022-12-16-swe-productivity/</link><pubDate>Fri, 16 Dec 2022 00:00:00 +0000</pubDate><guid>https://www.curiosities.dev/computer-science/swe-in-practice/2022-12-16-swe-productivity/</guid><description>Measuring Productivity Devs' Diverging Perceptions of Productivity Got interested in measuring it two years into my SWE career.
Initially rated myself based on % of completed daily objectives. The objectives didn&amp;rsquo;t necessarily correspond to work items. Stopped because the numbers were high even on days when I didn&amp;rsquo;t feel productive.
Switched to &amp;ldquo;stuff that affects others&amp;rdquo; (later came to know these are &amp;ldquo;function points&amp;rdquo;). More intuitively captures non-code objectives, e.g., aligning folks on feature specs.</description></item></channel></rss>