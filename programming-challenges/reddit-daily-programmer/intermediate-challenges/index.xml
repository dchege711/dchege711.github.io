<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Intermediate Challenges on c13u&#39;s Blog</title>
    <link>https://www.c13u.com/programming-challenges/reddit-daily-programmer/intermediate-challenges/</link>
    <description>Recent content in Intermediate Challenges on c13u&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 03 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.c13u.com/programming-challenges/reddit-daily-programmer/intermediate-challenges/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>To-Do List (Intermediate)</title>
      <link>https://www.c13u.com/programming-challenges/reddit-daily-programmer/intermediate-challenges/_219_to-do_list_part_2/</link>
      <pubDate>Sun, 03 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.c13u.com/programming-challenges/reddit-daily-programmer/intermediate-challenges/_219_to-do_list_part_2/</guid>
      <description>Description Link to original Reddit submission
 Thanks for that list you made me, my thoughts are way more organised!
I&#39;ve got a few problems though that I thought you might be able to help with? Sometimes I put the wrong information in a list item. Maybe to prevent this I&#39;d be able to modify/update the list item? That&#39;s not the only problem though, when there are 50+ items it gets kind of hard to work my way through.</description>
    </item>
    
    <item>
      <title>Smooshed Morse Code (Intermediate)</title>
      <link>https://www.c13u.com/programming-challenges/reddit-daily-programmer/intermediate-challenges/380_intermediate_smooshed_morse_code/380_intermediate_smooshed_morse_code/</link>
      <pubDate>Mon, 07 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.c13u.com/programming-challenges/reddit-daily-programmer/intermediate-challenges/380_intermediate_smooshed_morse_code/380_intermediate_smooshed_morse_code/</guid>
      <description>Description Link to original Reddit submission
 Smooshed Morse code means Morse code with the spaces or other delimiters between encoded letters left out. See this week&#39;s Easy challenge for more detail. A permutation of the alphabet is a 26-character string in which each of the letters a through z appears once. Given a smooshed Morse code encoding of a permutation of the alphabet, find the permutation it encodes, or any other permutation that produces the same encoding (in general there will be more than one).</description>
    </item>
    
    <item>
      <title>Fermat&#39;s Little Theorem (Intermediate)</title>
      <link>https://www.c13u.com/programming-challenges/reddit-daily-programmer/intermediate-challenges/346_intermediate_fermats_little_theorem/346_intermediate_fermats_little_theorem/</link>
      <pubDate>Fri, 26 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.c13u.com/programming-challenges/reddit-daily-programmer/intermediate-challenges/346_intermediate_fermats_little_theorem/346_intermediate_fermats_little_theorem/</guid>
      <description>Description Link to original challenge
Most introductionary implementations for testing the primality of a number have a time complexity of $ O(\sqrt{n}) $. For large numbers this is not a feasible strategy, for example testing a 400 digit number. Fermat&#39;s Little Theorem states:
 If $p$ is a prime number, then for any integer $a$, the number $a^p âˆ’ a$ is an integer multiple of $p$
 This can also be stated as: $a^p \mod p = a$.</description>
    </item>
    
    <item>
      <title>Linear Feedback Shift Register (Intermediate)</title>
      <link>https://www.c13u.com/programming-challenges/reddit-daily-programmer/intermediate-challenges/347_intermediate_linear_feedback_shift_register/347_intermediate_linear_feedback_shift_register/</link>
      <pubDate>Mon, 22 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.c13u.com/programming-challenges/reddit-daily-programmer/intermediate-challenges/347_intermediate_linear_feedback_shift_register/347_intermediate_linear_feedback_shift_register/</guid>
      <description>Description Link to original problem
In computing, a linear-feedback shift register (LFSR) is a shift register whose input bit is a linear function of its previous state. The most commonly used linear function of single bits is exclusive-or (XOR). Thus, an LFSR is most often a shift register whose input bit is driven by the XOR of some bits of the overall shift register value.
The initial value of the LFSR is called the seed, and because the operation of the register is deterministic, the stream of values produced by the register is completely determined by its current (or previous) state.</description>
    </item>
    
  </channel>
</rss>