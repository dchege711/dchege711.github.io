<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>www.ebi.ac.uk on Chege's Blog</title><link>https://www.curiosities.dev/domains/www.ebi.ac.uk/</link><description>Recent content in www.ebi.ac.uk on Chege's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 09 Jun 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://www.curiosities.dev/domains/www.ebi.ac.uk/index.xml" rel="self" type="application/rss+xml"/><item><title>Continuous Integration Tooling</title><link>https://www.curiosities.dev/computer-science/programming-challenges/flashcards-app/ci-tooling/</link><pubDate>Sun, 09 Jun 2024 00:00:00 +0000</pubDate><guid>https://www.curiosities.dev/computer-science/programming-challenges/flashcards-app/ci-tooling/</guid><description>What automatic tools can I add to keep code quality high?
CodeQL CodeQL is a tool that runs variant analysis on code. The idea is that we create a query from a known vulnerability, e.g., SQL injection, and then run it against a codebase to find instances of that vulnerability. GitHub authorizes the use of CodeQL for public repos, and so we are covered . ql-analysis.sh has a recipe for running the analysis locally in the repo.</description></item></channel></rss>