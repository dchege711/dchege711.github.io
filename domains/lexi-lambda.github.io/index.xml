<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>lexi-lambda.github.io on Chege's Blog</title><link>https://www.curiosities.dev/domains/lexi-lambda.github.io/</link><description>Recent content in lexi-lambda.github.io on Chege's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 19 Apr 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://www.curiosities.dev/domains/lexi-lambda.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Client/Server Interface</title><link>https://www.curiosities.dev/computer-science/programming-challenges/flashcards-app/client-server-interface/</link><pubDate>Fri, 19 Apr 2024 00:00:00 +0000</pubDate><guid>https://www.curiosities.dev/computer-science/programming-challenges/flashcards-app/client-server-interface/</guid><description>How to handle redirects without setting window.location.href? Right now, there&amp;rsquo;s a pattern of doing:
sendHTTPRequest(&amp;#34;POST&amp;#34;, &amp;#34;/login/&amp;#34;, {}) .then((_) =&amp;gt; { window.location.href = &amp;#34;/&amp;#34;; }) .catch((err) =&amp;gt; { console.error(err); }); Isn&amp;rsquo;t this something that the server can do? In response, why not issue a redirect?
Screenshot of the redirect chain from /login. The POST request gets a 303 (See Other) redirect to /home. The browser then makes a GET request to /home, which results in a 304 (Not Modified).</description></item></channel></rss>