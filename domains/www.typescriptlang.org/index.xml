<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>www.typescriptlang.org on Chege's Blog</title><link>https://www.curiosities.dev/domains/www.typescriptlang.org/</link><description>Recent content in www.typescriptlang.org on Chege's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 20 Apr 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://www.curiosities.dev/domains/www.typescriptlang.org/index.xml" rel="self" type="application/rss+xml"/><item><title>Of Builds and Bundlers</title><link>https://www.curiosities.dev/computer-science/programming-challenges/flashcards-app/of-builds-and-bundlers/</link><pubDate>Sat, 20 Apr 2024 00:00:00 +0000</pubDate><guid>https://www.curiosities.dev/computer-science/programming-challenges/flashcards-app/of-builds-and-bundlers/</guid><description>Moving to TypeScript entails configuring how the JavaScript will be eventually consumed by both the server and the client.
Separating the Client Bundle from the Server Bundle The server code runs in Node while the client code runs in the browser. advises separating the configurations for advantages like faster type-checking and compiling, lower memory usage when using an editor, and improved enforcement of the logical groupings of your program.</description></item><item><title>Client/Server Interface</title><link>https://www.curiosities.dev/computer-science/programming-challenges/flashcards-app/client-server-interface/</link><pubDate>Fri, 19 Apr 2024 00:00:00 +0000</pubDate><guid>https://www.curiosities.dev/computer-science/programming-challenges/flashcards-app/client-server-interface/</guid><description>How to handle redirects without setting window.location.href? Right now, there&amp;rsquo;s a pattern of doing:
sendHTTPRequest(&amp;#34;POST&amp;#34;, &amp;#34;/login/&amp;#34;, {}) .then((_) =&amp;gt; { window.location.href = &amp;#34;/&amp;#34;; }) .catch((err) =&amp;gt; { console.error(err); }); Isn&amp;rsquo;t this something that the server can do? In response, why not issue a redirect?
Screenshot of the redirect chain from /login. The POST request gets a 303 (See Other) redirect to /home. The browser then makes a GET request to /home, which results in a 304 (Not Modified).</description></item></channel></rss>