<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>source.chromium.org on Chege's Blog</title><link>https://www.curiosities.dev/domains/source.chromium.org/</link><description>Recent content in source.chromium.org on Chege's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 09 Feb 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://www.curiosities.dev/domains/source.chromium.org/index.xml" rel="self" type="application/rss+xml"/><item><title>WWW Watering Hole</title><link>https://www.curiosities.dev/computer-science/www/www-watering-hole/</link><pubDate>Sun, 09 Feb 2025 00:00:00 +0000</pubDate><guid>https://www.curiosities.dev/computer-science/www/www-watering-hole/</guid><description>As the web evolves, where do practitioners congregate and exchange ideas?
Working Groups develops standards and guidelines to help everyone build a web based on the principles of accessibility, internationalization, privacy and security.
publishes standards and drafts , which are then implemented by browser vendors, e.g., Chromium, Firefox, and Safari. Topics of interest: accessibility, browser, CSS, data, DOM, digital publishing, graphics, HTML, HTTP, internationalization, media, performance, privacy, protocol, security, web API, web fonts, Web of Things (WoT), and XML.</description></item><item><title>C++ Meta-Programming</title><link>https://www.curiosities.dev/computer-science/programming-challenges/language-concepts/meta-programming/cpp-metaprogramming/</link><pubDate>Mon, 28 Nov 2022 00:00:00 +0000</pubDate><guid>https://www.curiosities.dev/computer-science/programming-challenges/language-concepts/meta-programming/cpp-metaprogramming/</guid><description>Clang, LLVM, GCC, and MSVC LLVM is an umbrella project, with several sub-projects, e.g. LLVM Core and Clang. LLVM Core libraries provide an optimizer and code generator for different CPUs. Clang is an &amp;ldquo;LLVM native&amp;rdquo; C/C++/Objective-C compiler which aims for fast compilation, useful error and warning messages, and a platform for building source-level tools. The Clang Static Analyzer and clang-tidy are examples of such tools.
So if I were to create a programming language, I can define a transformation into LLVM intermediate representation (LLVM IR), and that will make use of LLVM core to optimize it?</description></item><item><title>Debugging</title><link>https://www.curiosities.dev/computer-science/debugging/</link><pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate><guid>https://www.curiosities.dev/computer-science/debugging/</guid><description>Debugging 101 Definition? Debugging involves inspecting a program&amp;rsquo;s internal state.
printf Debugging and Logging In printf debugging, one adds print statements and keeps iterating until enough information has been extracted.
Using logging has several advantages over printf debugging: varying logging destinations (e.g. standard output, files, sockets, remote servers, etc.); severity levels (e.g. INFO, DEBUG, WARN, ERROR, &amp;amp;c) that support filtering of output; color-coding for readability.
Terminals have varying levels of color support: plain color; ANSI escape codes (16 color codes with bold/italic and background); 256 color palette; 24-bit truecolor (&amp;ldquo;888&amp;rdquo; colors, aka 16 million, e.</description></item><item><title>Bloom Filters</title><link>https://www.curiosities.dev/computer-science/algorithms-and-data-structures/randomized-algs-and-ds/monte-carlo-algs-and-ds/bloom-filters/</link><pubDate>Sun, 07 Nov 2021 00:00:00 +0000</pubDate><guid>https://www.curiosities.dev/computer-science/algorithms-and-data-structures/randomized-algs-and-ds/monte-carlo-algs-and-ds/bloom-filters/</guid><description>Bloom Filters In true fashion to Stigler&amp;rsquo;s Law of Eponymy (no scientific discovery is named after its original discoverer ), Ross Ashby (1960) did a probabilistic analysis of Calvin Mooers&amp;rsquo;s Zatocoding (1947) (coding system for library cards). This predates Burton Bloom&amp;rsquo;s work (1970).
Motivation A Bloom filter for a set \(X: \{x_1, x_2, &amp;hellip;, x_n\} \) from some universe \(\mathbb{U}\) allows one to test whether a given item \(x \in \mathbb{B}\) is an element of \(X\).</description></item></channel></rss>