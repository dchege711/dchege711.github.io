<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>stackoverflow.com on Chege&#39;s Blog</title>
    <link>https://www.curiosities.dev/domains/stackoverflow.com/</link>
    <description>Recent content in stackoverflow.com on Chege&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 16 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://www.curiosities.dev/domains/stackoverflow.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AoC 2021 Day 03: Binary Diagnostic</title>
      <link>https://www.curiosities.dev/computer-science/programming-challenges/advent-of-code/2021/src/BinaryDiagnostic/03-binary-diagnostic/</link>
      <pubDate>Wed, 23 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.curiosities.dev/computer-science/programming-challenges/advent-of-code/2021/src/BinaryDiagnostic/03-binary-diagnostic/</guid>
      <description>Day 3 - Advent of Code 2021.  adventofcode.com  .  Accessed Feb 23, 2022.  Problem Description Part One The submarine has been making some odd creaking noises, so you ask it to produce a diagnostic report just in case.
The diagnostic report (your puzzle input) consists of a list of binary numbers which, when decoded properly, can tell you many useful things about the conditions of the submarine.</description>
    </item>
    
    <item>
      <title>AoC 2021 Day 09: Smoke Basin</title>
      <link>https://www.curiosities.dev/computer-science/programming-challenges/advent-of-code/2021/src/AoC2021/SmokeBasin/</link>
      <pubDate>Wed, 16 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.curiosities.dev/computer-science/programming-challenges/advent-of-code/2021/src/AoC2021/SmokeBasin/</guid>
      <description>Multi-dimensional arrays using &lt;code&gt;massiv&lt;/code&gt;; Fusion; Box vs. Unboxed; Connected Components; &lt;code&gt;Data.Set&lt;/code&gt;</description>
    </item>
    
    <item>
      <title>020. Factorial Digit Sum</title>
      <link>https://www.curiosities.dev/computer-science/programming-challenges/project-euler/020-factorial-digit-sum/020-factorial-digit-sum/</link>
      <pubDate>Sat, 15 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.curiosities.dev/computer-science/programming-challenges/project-euler/020-factorial-digit-sum/020-factorial-digit-sum/</guid>
      <description>Problem Statement  \(n!\) means \(n \times (n - 1) \times &amp;hellip; \times 3 \times 2 \times 1\).
For example, \(10! = 10 \times 9 \times &amp;hellip; \times 3 \times 2 \times 1 = 3628800\), and the sum of the digits in the number \(10!\) is \(3 + 6 + 2 + 8 + 8 + 0 + 0 = 27\).
Find the sum of the digits in the number \(100!</description>
    </item>
    
    <item>
      <title>Observer</title>
      <link>https://www.curiosities.dev/computer-science/gang-of-four-design-patterns/behavioral-patterns/07-observer/</link>
      <pubDate>Tue, 28 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.curiosities.dev/computer-science/gang-of-four-design-patterns/behavioral-patterns/07-observer/</guid>
      <description>notes that , the primary source, glosses over nitty-gritties. e.g. the &amp;ldquo;message queue&amp;rdquo; server. Maybe reading through these will provide a larger perspective to design decisions made in Chromium regarding observers.
   Rant: some of willchan&amp;rsquo;s thoughts on WeakPtr, for those who care to read   criticizes the observer pattern for murking dependency chains. Investigate more in this regard.
  Intent A one-to-many dependency between object so that when one object (subject) changes, all its dependents (observers) are notified and update automatically.</description>
    </item>
    
  </channel>
</rss>
