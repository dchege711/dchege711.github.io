<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>drewdevault.com on Chege&#39;s Blog</title>
    <link>https://www.curiosities.dev/domains/drewdevault.com/</link>
    <description>Recent content in drewdevault.com on Chege&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 14 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://www.curiosities.dev/domains/drewdevault.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Software Dependencies</title>
      <link>https://www.curiosities.dev/computer-science/2020-11-14-software-dependencies/</link>
      <pubDate>Sat, 14 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.curiosities.dev/computer-science/2020-11-14-software-dependencies/</guid>
      <description>Dependency Management Golang introduced a new library referencing mode to overcome limitations of the old one. While the two library modes are supported by Golang, they are incompatible, e.g. dependency management (DM) issues, reference inconsistencies, build failures, etc.  did an empirical study that resulted in HERO, an automated technique to detect DM issues and suggest fixes. Applied to 19k Golang projects, HERO detected 98.5% on a DM issue benchmark, and found 2,422 new DM issues in 2,356 Golang projects.</description>
    </item>
    
  </channel>
</rss>
