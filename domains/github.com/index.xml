<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>github.com on Chege&#39;s Blog</title>
    <link>https://www.curiosities.dev/domains/github.com/</link>
    <description>Recent content in github.com on Chege&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 19 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://www.curiosities.dev/domains/github.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Learning Haskell via AoC 2021</title>
      <link>https://www.curiosities.dev/computer-science/programming-challenges/advent-of-code/2021/haskell-meta/</link>
      <pubDate>Sat, 19 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.curiosities.dev/computer-science/programming-challenges/advent-of-code/2021/haskell-meta/</guid>
      <description>This page contains remarks on Haskell that I encountered when working with source files that span multiple AoC 2021 problems.
 and  have Haskell solutions. It&amp;rsquo;ll be nice to compare how they solved the problems. I don&amp;rsquo;t want to end up perfecting the wrong approach!
Setting Up Haskell Env for AoC To manage dependencies, Cabal   and Stack   are pretty popular. Stack incorporates the Cabal build system.</description>
    </item>
    
    <item>
      <title>AoC 2021 Day 01: Sonar Sweep</title>
      <link>https://www.curiosities.dev/computer-science/programming-challenges/advent-of-code/2021/src/SonarSweep/</link>
      <pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.curiosities.dev/computer-science/programming-challenges/advent-of-code/2021/src/SonarSweep/</guid>
      <description>Day 1 - Advent of Code 2021: Sonar Sweep.  adventofcode.com  .  Accessed Feb 18, 2022.  Part One As the submarine drops below the surface of the ocean, it automatically performs a sonar sweep of the nearby sea floor. On a small screen, the sonar weep report (your puzzle input) appears: each line is a measurement of the sea floor depth as the sweep looks further and further away from the submarine.</description>
    </item>
    
    <item>
      <title>AoC 2021 Day 01: Sonar Sweep</title>
      <link>https://www.curiosities.dev/computer-science/programming-challenges/advent-of-code/2021/src/SonarSweep/SonarSweep/</link>
      <pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.curiosities.dev/computer-science/programming-challenges/advent-of-code/2021/src/SonarSweep/SonarSweep/</guid>
      <description>Day 1 - Advent of Code 2021: Sonar Sweep.  adventofcode.com  .  Accessed Feb 18, 2022.  Part One As the submarine drops below the surface of the ocean, it automatically performs a sonar sweep of the nearby sea floor. On a small screen, the sonar weep report (your puzzle input) appears: each line is a measurement of the sea floor depth as the sweep looks further and further away from the submarine.</description>
    </item>
    
    <item>
      <title>02. The Subject</title>
      <link>https://www.curiosities.dev/writing/the-new-strategy-of-style/02-subject-and-thesis/</link>
      <pubDate>Mon, 02 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.curiosities.dev/writing/the-new-strategy-of-style/02-subject-and-thesis/</guid>
      <description>The Subject The number of words aren&amp;rsquo;t intuitive to me. Adults tend to read non-fiction at 238 words per minute.  So a good test for how appropriate a piece of writing is, &amp;ldquo;Can the writer cover X in N minutes?&amp;rdquo;
Hugo uses 213 WPM, while Medium uses 265 WPM, suggesting Medium has a bias for skimming over close reading. 
I wonder if a browser extension that rates the appropriateness of articles given their subject and their word count is a feasible/desirable thing.</description>
    </item>
    
    <item>
      <title>03. Cross-Site Request Forgery (XSRF)</title>
      <link>https://www.curiosities.dev/computer-science/cos432-information-security/11-web-security/03-cross-site-request-forgery/</link>
      <pubDate>Wed, 21 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.curiosities.dev/computer-science/cos432-information-security/11-web-security/03-cross-site-request-forgery/</guid>
      <description>Cross-site Request Forgery (XSRF) &amp;lt;img src=&amp;#34;http://bank.com/transfer?from=from_ID&amp;amp;to=to_ID&amp;amp;value=1000&amp;#34;&amp;gt; Because the user is logged in and has a cookie, the victim site trusts the user&amp;rsquo;s browser.
The attacker gets user/browser to execute command on victim site, e.g. request a link, post a form. The command has permanent effects.
A frame can navigate its immediate children. Why is it designed such that it can&amp;rsquo;t navigate its children too?
Consider a website with a login frame, where the user inputs passwords.</description>
    </item>
    
    <item>
      <title>021. Amicable Numbers</title>
      <link>https://www.curiosities.dev/computer-science/programming-challenges/project-euler/021-amicable-numbers/021-amicable-numbers/</link>
      <pubDate>Sat, 06 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.curiosities.dev/computer-science/programming-challenges/project-euler/021-amicable-numbers/021-amicable-numbers/</guid>
      <description>Problem Statement  Let \(d(n)\) be defined as the sum of proper divisors of \(n\) (numbers less than \(n\) which divide evenly into \(n\)).
If \(d(a) = b\) and \(d(b) = a\), where \(a \neq b\), then \(a\) and \(b\) are an amicable pair and each of \(a\) and \(b\) are called amicable numbers.
For example, the proper divisors of \(220\) are \(1, 2, 4, 5, 10, 11, 20, 22, 44, 55, 110\); therefore \(d(220) = 284\).</description>
    </item>
    
    <item>
      <title>Software Engineering Journal Reviews</title>
      <link>https://www.curiosities.dev/computer-science/2022-01-16-swe-journal-reviews/</link>
      <pubDate>Sat, 15 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.curiosities.dev/computer-science/2022-01-16-swe-journal-reviews/</guid>
      <description>Formal Software Design Alloy is an open-source language and analyzer for software modeling. An Alloy model is a collection of constraints that describe a set of structures, e.g. all possible security configurations of a web application. Alloy&amp;rsquo;s tool, the Alloy Analyzer is a solver that takes the constraints of a model and finds structures that satisfy them. 
ðŸ“‘    The Alloy Analyzer leverages a SAT solver, and this precludes Alloy from analyzing optimization problems.</description>
    </item>
    
    <item>
      <title>Journal Reviews on Fairness</title>
      <link>https://www.curiosities.dev/computer-science/bias-and-fairness/2021-10-04-journal-reviews-on-fairness/</link>
      <pubDate>Mon, 04 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.curiosities.dev/computer-science/bias-and-fairness/2021-10-04-journal-reviews-on-fairness/</guid>
      <description>Meta ðŸ“‘    Instead of changing the data or learners in multiple ways and then see if fairness improves,  postulate that the root causes of bias are the prior decisions that generated the training data. These affect (a) what data was selected, and (b) the labels assigned to the examples. They propose the \(\text{Fair-SMOTE}\) (Fair Synthetic Minority Over Sampling Technique) algorithm which (1) removes biased labels (via situation testing: if the model&amp;rsquo;s prediction for a data point changes once all of the data points&#39; protected attributes  are flipped, then that label is biased and the data point is discarded), and (2) rebalances internal distributions such that based on a protected attribute, examples are equal in both positive and negative classes.</description>
    </item>
    
    <item>
      <title>Software Dependencies</title>
      <link>https://www.curiosities.dev/computer-science/2020-11-14-software-dependencies/</link>
      <pubDate>Sat, 14 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.curiosities.dev/computer-science/2020-11-14-software-dependencies/</guid>
      <description>Dependency Management Golang introduced a new library referencing mode to overcome limitations of the old one. While the two library modes are supported by Golang, they are incompatible, e.g. dependency management (DM) issues, reference inconsistencies, build failures, etc.  did an empirical study that resulted in HERO, an automated technique to detect DM issues and suggest fixes. Applied to 19k Golang projects, HERO detected 98.5% on a DM issue benchmark, and found 2,422 new DM issues in 2,356 Golang projects.</description>
    </item>
    
    <item>
      <title>ML Usefulness to a Dev</title>
      <link>https://www.curiosities.dev/computer-science/machine-learning/ml-crash-course/ml-concepts/01-introduction-to-ml/</link>
      <pubDate>Sat, 24 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.curiosities.dev/computer-science/machine-learning/ml-crash-course/ml-concepts/01-introduction-to-ml/</guid>
      <description>Link to Original Video   ML Usefulness to a Dev  Reduce time spent programming, e.g. manually crafted spellchecker with rules of thumb vs. feeding ML model some examples.  How many words are there in English? Is it hard to have a huge set of all the possible words? How do spellcheckers do it?
Hunspell is the most popular OSS , and it was being used by Chromium , but on Chromium for Windows, the Windows Spellcheck is used .</description>
    </item>
    
    <item>
      <title>ML Usefulness to a Dev</title>
      <link>https://www.curiosities.dev/computer-science/machine-learning/perspectives-on-ml/gdev-intro-to-ml/</link>
      <pubDate>Sat, 24 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.curiosities.dev/computer-science/machine-learning/perspectives-on-ml/gdev-intro-to-ml/</guid>
      <description>Link to Original Video   ML Usefulness to a Dev  Reduce time spent programming, e.g. manually crafted spellchecker with rules of thumb vs. feeding ML model some examples.  How many words are there in English? Is it hard to have a huge set of all the possible words? How do spellcheckers do it?
Hunspell is the most popular OSS , and it was being used by Chromium , but on Chromium for Windows, the Windows Spellcheck is used .</description>
    </item>
    
    <item>
      <title>On Socio-Economic Classes</title>
      <link>https://www.curiosities.dev/socioeconomics/2020-07-04-socioeconomic-classes/</link>
      <pubDate>Sat, 04 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.curiosities.dev/socioeconomics/2020-07-04-socioeconomic-classes/</guid>
      <description>On the Phenomenon of Bullshit Jobs  Capitalism is meant to eliminate bullshit jobs, yet layoffs tend to fall on people making, moving, fixing and maintaining things, but not on the salaried paper pushers that effectively work 15 hours a week.
â€‹From a political standpoint, a happy productive population with free time on their hands is mortal to the ruling class. Moreover, work is considered a moral value in itself.</description>
    </item>
    
  </channel>
</rss>
