<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>www.cis.upenn.edu on Chege&#39;s Blog</title>
    <link>https://www.curiosities.dev/domains/www.cis.upenn.edu/</link>
    <description>Recent content in www.cis.upenn.edu on Chege&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 19 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://www.curiosities.dev/domains/www.cis.upenn.edu/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Learning Haskell via AoC 2021</title>
      <link>https://www.curiosities.dev/computer-science/programming-challenges/advent-of-code/2021/haskell-meta/</link>
      <pubDate>Sat, 19 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.curiosities.dev/computer-science/programming-challenges/advent-of-code/2021/haskell-meta/</guid>
      <description>This page contains remarks on Haskell that I encountered when working with source files that span multiple AoC 2021 problems.
 and  have Haskell solutions. It&amp;rsquo;ll be nice to compare how they solved the problems. I don&amp;rsquo;t want to end up perfecting the wrong approach!
Setting Up Haskell Env for AoC To manage dependencies, Cabal   and Stack   are pretty popular. Stack incorporates the Cabal build system.</description>
    </item>
    
  </channel>
</rss>
