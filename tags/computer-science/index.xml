<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Computer Science on c13u&#39;s Blog</title>
    <link>https://www.c13u.com/tags/computer-science/</link>
    <description>Recent content in Computer Science on c13u&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 21 Mar 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://www.c13u.com/tags/computer-science/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>New grad vs senior dev [Eric Lipppert]</title>
      <link>https://www.c13u.com/computer-science/2020-03-27-new-grad-vs-senior-dev/</link>
      <pubDate>Fri, 27 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.c13u.com/computer-science/2020-03-27-new-grad-vs-senior-dev/</guid>
      <description>New grad vs senior dev.  Eric Lipppert. Fabulous adventures in coding. https://ericlippert.com/2020/03/27/new-grad-vs-senior-dev/  . https://news.ycombinator.com/item?id=22352674  . Mar 27, 2020.  Substring Search in Visual Basic In CS, substring search is a foundational problem for which there are \(O(m + n)\) algorithms. But VB&amp;rsquo;s implementation was \(O(mn)\). Suppose we have InStr(&amp;quot;apple banana orange&amp;quot;, &amp;quot;banana&amp;quot;):
 Skip to the first b. Check if banana is a substring starting from that b.</description>
    </item>
    
    <item>
      <title>The Missing Semester of your CS Education [MIT]</title>
      <link>https://www.c13u.com/computer-science/the-missing-cs-semester/_meta/</link>
      <pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.c13u.com/computer-science/the-missing-cs-semester/_meta/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Information and Technology Policy [WWS 351]</title>
      <link>https://www.c13u.com/politics-and-governance/wws351-it-policy/_meta/</link>
      <pubDate>Mon, 04 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.c13u.com/politics-and-governance/wws351-it-policy/_meta/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Information Security [COS 432]</title>
      <link>https://www.c13u.com/computer-science/cos432-information-security/_meta/</link>
      <pubDate>Wed, 12 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.c13u.com/computer-science/cos432-information-security/_meta/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ML Crash Course [dev@google]</title>
      <link>https://www.c13u.com/computer-science/machine-learning/ml-crash-course/_meta/</link>
      <pubDate>Wed, 28 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.c13u.com/computer-science/machine-learning/ml-crash-course/_meta/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Machine Learning and Predictive Analytics [ELE 364]</title>
      <link>https://www.c13u.com/computer-science/machine-learning/ele364-machine-learning-and-predictive-analytics/_meta/</link>
      <pubDate>Thu, 14 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.c13u.com/computer-science/machine-learning/ele364-machine-learning-and-predictive-analytics/_meta/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Designing Data-Intensive Applications [Kleppmann, Martin]</title>
      <link>https://www.c13u.com/computer-science/klepmann-ddia/_meta/</link>
      <pubDate>Thu, 16 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.c13u.com/computer-science/klepmann-ddia/_meta/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Privacy on the Web</title>
      <link>https://www.c13u.com/computer-science/www/2021-01-05-privacy-on-the-web/</link>
      <pubDate>Mon, 04 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.c13u.com/computer-science/www/2021-01-05-privacy-on-the-web/</guid>
      <description>One can use curl -v &amp;lt;url&amp;gt; to see all of the redirections and cookies set.  found that generating a tiny URL for Zoom links gives a URL that first goes to redirect.viglink.com.
I tried this on https://tinyurl.com/yyte6pqv, which points to https://www.c13u.com/socioeconomics/2020-11-21-experiments-in-social-economics/, but didn&amp;rsquo;t observe any 3rd party cookies. tinyurl.com did set a cookie, but that&amp;rsquo;s probably expected.
   proposes Federated Learning of Cohorts, which aims to enable ad-targeting based on people&amp;rsquo;s general browsing interest without exposing the exact browsing history.</description>
    </item>
    
    <item>
      <title>Computer Graphics Potpourri</title>
      <link>https://www.c13u.com/computer-science/computer-graphics/2021-01-03-potpourri/</link>
      <pubDate>Sun, 03 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.c13u.com/computer-science/computer-graphics/2021-01-03-potpourri/</guid>
      <description>Retained Mode vs. Immediate Mode In retained mode, the graphics library exposes an API to the application for building/updating a scene. However, the graphics library is in charge of issuing drawing commands. In contrast, an immediate-mode API allows the application to issue the drawing commands. Retained-mode APIs abstract away initialization, state maintenance and cleanup, but uses more memory. Immediate-mode APIs allow for more targeted optimizations. 
https://reactjs.org/ is one of the more popular retained-mode web APIs.</description>
    </item>
    
    <item>
      <title>Information Retrieval Medley</title>
      <link>https://www.c13u.com/computer-science/2021-01-03-information-retrieval-medley/</link>
      <pubDate>Sun, 03 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.c13u.com/computer-science/2021-01-03-information-retrieval-medley/</guid>
      <description>Pagination with Relative Cursors  Exposing pagination through URLs like example.com/items?page=25&amp;amp;limit=100 leads to SQL like SELECT * from &#39;items&#39; LIMIT 100 OFFSET 2400;, which inefficiently goes through 2,500 records and discards the first 2,400.
With relative cursors, we have URLs like example.com/items?limit=50&amp;amp;lastID=XXX, which leads to SQL like SELECT * from &#39;items&#39; WHERE &#39;id&#39; &amp;gt; XXX ORDER BY &#39;id&#39; ASC LIMIT 50, and this is more efficient, assuming there are indexes for id.</description>
    </item>
    
    <item>
      <title>On Distributed Systems</title>
      <link>https://www.c13u.com/computer-science/2020-05-17-distributed-systems/</link>
      <pubDate>Sun, 17 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.c13u.com/computer-science/2020-05-17-distributed-systems/</guid>
      <description>Mergeable Replicated Data Types  On a distributed system, each replica should [eventually] converge to the same state. Commutative Replicated Data Types (CRDTs) can accept updates and achieve consistent without remote synchronization.
The Need for Commutativity Say we have a queue \( 1 \to 2 \). Suppose two replicas, \(r_1\) and \(r_2\), independently call pop(). Each replica will have \(2\) on their queue.
However, on receiving an update that the other replica popped, each replica will call pop() to be consistent, thereby deleting \(2\).</description>
    </item>
    
    <item>
      <title>Kernighan&#39;s Remarks on the Digital Humanities</title>
      <link>https://www.c13u.com/computer-science/miscellaneous/2018-10-01-digital-humanities-with-kernighan/</link>
      <pubDate>Mon, 01 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.c13u.com/computer-science/miscellaneous/2018-10-01-digital-humanities-with-kernighan/</guid>
      <description>OCR tends to miss (sometimes) really important context.
Make use of derived data, e.g. age at marriage, gender differences, mortality rates, mapping migrations, last names
Don&amp;rsquo;t spend all your time cleaning data.
Try a sequence of things, not one big idea.
Don&amp;rsquo;t expect existing tools to do the whole job. All the while, building new tools is not as straightforward.
Sample Digital Humanities Projects  ORBIS by Stanford  . A kayak for the Roman Era.</description>
    </item>
    
    <item>
      <title>Networks: Friends, Money and Bytes [COS 381]</title>
      <link>https://www.c13u.com/computer-science/networks-friends-money-bytes/_meta/</link>
      <pubDate>Wed, 13 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.c13u.com/computer-science/networks-friends-money-bytes/_meta/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Computer Science &amp; Software Engineering</title>
      <link>https://www.c13u.com/computer-science/</link>
      <pubDate>Tue, 01 Oct 1974 00:00:00 +0000</pubDate>
      
      <guid>https://www.c13u.com/computer-science/</guid>
      <description>Brashly stroked, computer science is what I learned in school, and software engineering is what I encounter in the &amp;lsquo;real world&amp;rsquo;. The boundary is blurry, so let&amp;rsquo;s have them all in place.</description>
    </item>
    
  </channel>
</rss>
