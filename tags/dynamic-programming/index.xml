<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dynamic-programming on Chege's Blog</title><link>https://www.curiosities.dev/tags/dynamic-programming/</link><description>Recent content in dynamic-programming on Chege's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 31 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://www.curiosities.dev/tags/dynamic-programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Unique Paths to the Bottom-Right Corner w/ Obstacles</title><link>https://www.curiosities.dev/computer-science/programming-challenges/leet-code-and-others/grids/unique-down-right-paths-with-obstacles/</link><pubDate>Sun, 31 Jul 2022 00:00:00 +0000</pubDate><guid>https://www.curiosities.dev/computer-science/programming-challenges/leet-code-and-others/grids/unique-down-right-paths-with-obstacles/</guid><description>Problem Starting from the top-left corner, what is the number of possible unique paths to reach the bottom-right corner, if you can only move either down or right at any point in time, and the path cannot include any square that is an obstacle?
Solution The addition of obstacles has these implications:
I can&amp;rsquo;t use the combinatorics formula because the problem is no longer easy to define in general terms.</description></item></channel></rss>