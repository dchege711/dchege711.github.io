"""
clean_onenote_gem_html.py

Strip the inline CSS that's added by OneNote Gem, so that I can apply my own 
CSS rules

"""

from glob import glob
from itertools import chain

from bs4 import BeautifulSoup

def clean_html(html_filepath):
    """
    Clean the HTML generated by OneNote Gem. All attributes, except `href` will 
    be scrapped off the DOM elements. Only the `<td>` nodes will be left in the 
    DOM tree. The `<td>` nodes will be rewritten as `<div>`

    """
    attributes_to_preserve = ["src", "href", "alt"]

    with open(html_filepath, "r+") as html_file:
        dom_elements = BeautifulSoup(html_file, "html.parser").find_all("td")

        empty_elements = []

        for td_element in dom_elements:
            for idx, element in enumerate(chain([td_element], td_element.descendants)):
                try:
                    attributes_to_remove = set(element.attrs)

                    for attribute_name in attributes_to_preserve:
                        attributes_to_remove.discard(attribute_name)

                    for atrribute_name in attributes_to_remove:
                        del element[atrribute_name]

                    # Only update `<td></td>` to `<div></div>`
                    if idx == 0: element.name = "div"

                    if not any(element.stripped_strings) and element.name != "img" and not element.find("img"):
                        empty_elements.append(element)

                except AttributeError:
                    pass

        # Delete elements that don't have any text in them
        for element in empty_elements:
            element.extract()

        # Delete the existing HTML content
        html_file.seek(0)
        
        for element in reversed(dom_elements):
            # Since we did not delete the parent if all the children were 
            # empty, this check is necessary
            if any(element.stripped_strings):
                html_file.write(element.prettify(formatter="html"))

        html_file.truncate()
        print("Wrote", html_file.tell(), "bytes to", html_filepath)

if __name__ == "__main__":
    for file_path in glob("onenote_gem_html/*.htm"):
        clean_html(file_path)
