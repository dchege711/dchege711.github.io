<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Large Language Models on Chege's Blog</title><link>https://www.curiosities.dev/computer-science/large-language-models/</link><description>Recent content in Large Language Models on Chege's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 14 Dec 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://www.curiosities.dev/computer-science/large-language-models/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction to LLMs</title><link>https://www.curiosities.dev/computer-science/large-language-models/intro-to-llms/</link><pubDate>Thu, 14 Dec 2023 00:00:00 +0000</pubDate><guid>https://www.curiosities.dev/computer-science/large-language-models/intro-to-llms/</guid><description>What is a Language Model? A language model (LM) is a probability distribution over sequences of tokens. Suppose we have a vocabulary \(\mathcal{V}\) of a set of tokens, then a language model \(p\) assigns each sequence of tokens \(x_1, &amp;hellip;, x_L \in \mathcal{V} \) a probability.
To assign meaningful probabilities to all sequences requires syntactic knowledge and world knowledge. Given \( \mathcal{V} = \{ \text{ate}, \text{ball}, \text{cheese}, \text{mouse}, \text{the} \} \):</description></item><item><title>How I Learned to Stop Worrying and Love LLMs in IDEs</title><link>https://www.curiosities.dev/computer-science/large-language-models/writing-code-with-llms/</link><pubDate>Sun, 01 Jun 2025 00:00:00 +0000</pubDate><guid>https://www.curiosities.dev/computer-science/large-language-models/writing-code-with-llms/</guid><description>My work is primarily in Microsoft&amp;rsquo;s ecosystem, so learning Copilot usage in VS Code is pretty important. If not for my own productivity gains, then for having knowledgeable conversations with coworkers about using LLMs as a SWE.
Customizing Copilot Custom Instructions Choice of Language Models Add Tools for Agentic Modes Copilot can also connect MCP-compatible servers to agentic workflows, e.g., GitHub&amp;rsquo;s MCP server offers tools to list repositories, create PRs, manage issues, etc.</description></item><item><title>LLM Evals</title><link>https://www.curiosities.dev/computer-science/large-language-models/llm-evals/</link><pubDate>Sun, 06 Apr 2025 00:00:00 +0000</pubDate><guid>https://www.curiosities.dev/computer-science/large-language-models/llm-evals/</guid><description>Notable Benchmarks Some notable benchmarks in language modeling:
MMLU: 57 tasks spanning elementary math, US history, computer science, law, and more. EleutherAI Eval: Unified framework to test models via zero/few-shot settings on 200 tasks from various evals, including MMLU. HELM: Evaluates LLMs across domains; tasks include Q&amp;amp;A, information retrieval, summarization, text classification, etc. AlpacaEval: Measures how often a strong LLM (e.g., GPT-4) prefers the output of one model over a reference model.</description></item><item><title>UX for LLMs</title><link>https://www.curiosities.dev/computer-science/large-language-models/ux-for-llms/</link><pubDate>Sun, 16 Feb 2025 00:00:00 +0000</pubDate><guid>https://www.curiosities.dev/computer-science/large-language-models/ux-for-llms/</guid><description>tldraw.com&amp;rsquo;s Take on an LLM Canvas is a library for creating infinite canvas experiences in React.
In UX history, chat has tended to precede canvas. From running computers from the command prompt to using the screen as a canvas via a mouse. Mobile phones went from being keypad oriented into a canvas where the finger controls the touchscreen. Where are the canvases for LLMs?
Multi-modal models, e.</description></item><item><title>Using LLMs to Enhance My Capabilities</title><link>https://www.curiosities.dev/computer-science/large-language-models/using-llms/</link><pubDate>Tue, 24 Dec 2024 00:00:00 +0000</pubDate><guid>https://www.curiosities.dev/computer-science/large-language-models/using-llms/</guid><description>Sample Use Cases LLMs are increasingly here to stay despite the reservations . How can I use them to enhance my capabilities?
Building complete applications, e.g., a trivia-like game with Python&amp;rsquo;s Flask web server. Makes it cheap to prototype in cases where the technology behind the prototype matters much less than the content or problem being solved.
As a tutor for new technologies/framework. Although React might be new to you, it&amp;rsquo;s not new to other people.</description></item><item><title>LLMs: Stochastic Parrots ðŸ¦œ and How (Not) to Use Them</title><link>https://www.curiosities.dev/computer-science/large-language-models/stochastic-parrots/</link><pubDate>Wed, 03 Mar 2021 00:00:00 +0000</pubDate><guid>https://www.curiosities.dev/computer-science/large-language-models/stochastic-parrots/</guid><description>was written in a period when NLP practitioners are producing bigger (# of parameters; size of training data) language models (LMs), and pushing the top scores on benchmarks. The paper itself was controversial because it led to Gebru being fired from Google, following disagreements with her managers on conditions (withdraw, or remove Google-affiliated authors) for publishing the paper.
A lot changed since mid-2021, when I initially wrote this page.</description></item></channel></rss>