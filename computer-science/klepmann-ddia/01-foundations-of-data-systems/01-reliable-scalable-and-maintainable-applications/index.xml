<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reliable, Scalable, and Maintainable Applications on c13u&#39;s Blog</title>
    <link>https://www.c13u.com/computer-science/klepmann-ddia/01-foundations-of-data-systems/01-reliable-scalable-and-maintainable-applications/</link>
    <description>Recent content in Reliable, Scalable, and Maintainable Applications on c13u&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 16 Mar 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://www.c13u.com/computer-science/klepmann-ddia/01-foundations-of-data-systems/01-reliable-scalable-and-maintainable-applications/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Thinking About Data Systems</title>
      <link>https://www.c13u.com/computer-science/klepmann-ddia/01-foundations-of-data-systems/01-reliable-scalable-and-maintainable-applications/01-thinking-about-data-systems/</link>
      <pubDate>Sun, 22 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.c13u.com/computer-science/klepmann-ddia/01-foundations-of-data-systems/01-reliable-scalable-and-maintainable-applications/01-thinking-about-data-systems/</guid>
      <description>The access patterns for a data system (e.g. database, cache, etc.) motivate different implementations, and thus performance characteristics.
Because many applications have a wide range of requirements, single tools no longer meet all of the data processing and storage needs. It&amp;rsquo;s up to the application to stitch together different tools.
Despite the behind-the-scenes stitching, the data system may provide certain guarantees, e.g. the cache will be correctly invalidated.</description>
    </item>
    
    <item>
      <title>Reliability</title>
      <link>https://www.c13u.com/computer-science/klepmann-ddia/01-foundations-of-data-systems/01-reliable-scalable-and-maintainable-applications/02-reliability/</link>
      <pubDate>Sun, 22 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.c13u.com/computer-science/klepmann-ddia/01-foundations-of-data-systems/01-reliable-scalable-and-maintainable-applications/02-reliability/</guid>
      <description>A fault is when a component deviates from its spec, while a failure is when the system no longer provides the required service to the user.
Better to design fault-tolerant systems because we can&amp;rsquo;t reduce the probability of a fault to zero.
In fault-tolerant systems, one should trigger faults deliberately in order to test the tolerance, e.g. randomly killing individual processes.
However, not all things can be tolerated. For instance, if an attacker gains access to sensitive data, then the damage can&amp;rsquo;t be undone.</description>
    </item>
    
    <item>
      <title>Maintainability</title>
      <link>https://www.c13u.com/computer-science/klepmann-ddia/01-foundations-of-data-systems/01-reliable-scalable-and-maintainable-applications/04-maintainability/</link>
      <pubDate>Sun, 22 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.c13u.com/computer-science/klepmann-ddia/01-foundations-of-data-systems/01-reliable-scalable-and-maintainable-applications/04-maintainability/</guid>
      <description>Ongoing maintenance includes: fixing bugs, keeping systems operational, adapting to new platforms, modifying to fit new use cases, etc.
Operability: Making Life Easy for Operations Operations teams keep a software system running smoothly. A data system can make life easier for Ops people by:
 Providing visibility into runtime behavior and system internals. Supporting automation and integration with standard tools. Being tolerant of machines being down for maintenance. Good documentation, e.</description>
    </item>
    
    <item>
      <title>Scalability</title>
      <link>https://www.c13u.com/computer-science/klepmann-ddia/01-foundations-of-data-systems/01-reliable-scalable-and-maintainable-applications/03-scalability/</link>
      <pubDate>Sun, 22 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.c13u.com/computer-science/klepmann-ddia/01-foundations-of-data-systems/01-reliable-scalable-and-maintainable-applications/03-scalability/</guid>
      <description>Describing Load Load parameters are numbers that describe the load on a system, e.g. number of requests per second to a web server, ratio of reads to writes in a database, number of simultaneously active users in a chat room.
Example: Twitter Major operations:
 Users posting tweets: \(4.6k\) requests/sec on average, \(12k+\) requests/sec at peak. Users viewing timelines: \(300k\) requests/sec.  Twitter&amp;rsquo;s scaling challenge is the fan-out: each user follows many people and each user is followed by many people.</description>
    </item>
    
  </channel>
</rss>
