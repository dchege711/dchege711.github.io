<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Miscellanous on c13u&#39;s Blog</title>
    <link>https://www.c13u.com/computer-science/miscellaneous/</link>
    <description>Recent content in Miscellanous on c13u&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Apr 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://www.c13u.com/computer-science/miscellaneous/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Of Code Smells and Hygiene</title>
      <link>https://www.c13u.com/computer-science/miscellaneous/2020-07-05-code-smells-and-hygiene/</link>
      <pubDate>Sun, 05 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.c13u.com/computer-science/miscellaneous/2020-07-05-code-smells-and-hygiene/</guid>
      <description>On Abstractions If you find yourself adding more parameters and if-statements to an existing abstraction, is the abstraction still apt? Why not remove the old abstraction and re-extract a new [more apt] abstraction? Devs frequently succumb to the sunken cost fallacy thinking that there must have been a reason that the code was written in a certain way. 
References  The Wrong Abstraction.  Sandi Metz. https://www.sandimetz.com/blog/2016/1/20/the-wrong-abstraction . https://news.ycombinator.com/item?id=23739596 .</description>
    </item>
    
    <item>
      <title>Software Picking Sides</title>
      <link>https://www.c13u.com/computer-science/miscellaneous/2020-07-04-software-picking-sides/</link>
      <pubDate>Sat, 04 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.c13u.com/computer-science/miscellaneous/2020-07-04-software-picking-sides/</guid>
      <description>Examples The Markup found that 70% of political and racial justice emails to Gmail accounts are placed &amp;ldquo;promotions&amp;rdquo; tab, which isn&amp;rsquo;t as noticeable as the &amp;ldquo;inbox&amp;rdquo; tab. 
Sorting email looks like a hard software problem. If the sender isn&amp;rsquo;t in the phonebook, and Gmail noticed the same sender in thousands of emails to other Gmail accounts, how likely is it that the sender is sending a personal email?
It seems that the onus is on mail list maintainers to instruct users how to make sure that future emails get routed to the &amp;ldquo;primary&amp;rdquo; tab, e.</description>
    </item>
    
    <item>
      <title>APIs Are Not In the Efficiency Business</title>
      <link>https://www.c13u.com/computer-science/miscellaneous/2020-04-11-apis-are-not-in-the-efficiency-business/</link>
      <pubDate>Sat, 11 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.c13u.com/computer-science/miscellaneous/2020-04-11-apis-are-not-in-the-efficiency-business/</guid>
      <description>CityFlo Reduces Google Maps API Bill by 94%  Google Directions API limited their free tier  . CityFlo uses this API to calculate ETAs. Initially, CityFlo queried the API every time a stop was registered.
This was the problem. The number of API calls should be dependent on the stops themselves, not the buses. For an MVP, sure - make that query - but if you&amp;rsquo;re running a growing business, those calls add up!</description>
    </item>
    
    <item>
      <title>Kernighan&#39;s Remarks on the Digital Humanities</title>
      <link>https://www.c13u.com/computer-science/miscellaneous/2018-10-01-digital-humanities-with-kernighan/</link>
      <pubDate>Mon, 01 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.c13u.com/computer-science/miscellaneous/2018-10-01-digital-humanities-with-kernighan/</guid>
      <description>OCR tends to miss (sometimes) really important context.
Make use of derived data, e.g. age at marriage, gender differences, mortality rates, mapping migrations, last names
Don&amp;rsquo;t spend all your time cleaning data.
Try a sequence of things, not one big idea.
Don&amp;rsquo;t expect existing tools to do the whole job. All the while, building new tools is not as straightforward.
Sample Digital Humanities Projects  ORBIS by Stanford  . A kayak for the Roman Era.</description>
    </item>
    
    <item>
      <title>Computers Can Solve Your Problem. You May Not Like the Answer. [Boston Globe]</title>
      <link>https://www.c13u.com/computer-science/miscellaneous/2018-09-21-boston-public-school-equity-algorithm/</link>
      <pubDate>Fri, 21 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.c13u.com/computer-science/miscellaneous/2018-09-21-boston-public-school-equity-algorithm/</guid>
      <description>Computers Can Solve Your Problem. You May Not Like the Answer. : The algorithm had four guiding principles:
 Increase # of high school students starting after 8am Decrease # of elementary school students dismissed after 4pm Accommodate the needs of special education students Generate transportation savings  Unprecedented opposition to the algorithm&amp;rsquo;s solution. Angry parents signed petitions and stormed the school committee. BPS dropped the solution.
Complications:
 Younger students were being forced into earlier start hours.</description>
    </item>
    
  </channel>
</rss>
