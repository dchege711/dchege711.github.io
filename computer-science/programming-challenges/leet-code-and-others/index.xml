<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Leet Code Style Questions on Chege's Blog</title><link>https://www.curiosities.dev/computer-science/programming-challenges/leet-code-and-others/</link><description>Recent content in Leet Code Style Questions on Chege's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 30 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://www.curiosities.dev/computer-science/programming-challenges/leet-code-and-others/index.xml" rel="self" type="application/rss+xml"/><item><title>Sorting and Searching</title><link>https://www.curiosities.dev/computer-science/programming-challenges/leet-code-and-others/sorting-and-searching/</link><pubDate>Mon, 01 Aug 2022 00:00:00 +0000</pubDate><guid>https://www.curiosities.dev/computer-science/programming-challenges/leet-code-and-others/sorting-and-searching/</guid><description>Order Statistics K-th Smallest Element in Sorted Matrix Given an \(N \times N\) matrix, where each of the rows and columns are sorted in ascending order, return the \(k^{th}\) smallest element in the matrix. The memory complexity must be better than \(O(N^2)\).
It&amp;rsquo;s not guaranteed that matrix[r][c] &amp;gt; matrix[r-1][c], so we can&amp;rsquo;t compute the row (and similarly, the column) in which the \(k^{th}\) smallest element is in.
Using a priority queue that holds the \(K\) smallest elements does not work because the memory usage is \(O(K)\), where \(K\) can be any value in \([1, N^2]\).</description></item></channel></rss>