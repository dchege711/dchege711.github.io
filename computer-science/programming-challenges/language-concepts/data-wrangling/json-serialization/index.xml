<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>JSON Serialization on Chege's Blog</title><link>https://www.curiosities.dev/computer-science/programming-challenges/language-concepts/data-wrangling/json-serialization/</link><description>Recent content in JSON Serialization on Chege's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 05 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://www.curiosities.dev/computer-science/programming-challenges/language-concepts/data-wrangling/json-serialization/index.xml" rel="self" type="application/rss+xml"/><item><title>JSON Serialization in .NET</title><link>https://www.curiosities.dev/computer-science/programming-challenges/language-concepts/data-wrangling/json-serialization/json-serialization-in-dotnet/</link><pubDate>Sat, 05 Jul 2025 00:00:00 +0000</pubDate><guid>https://www.curiosities.dev/computer-science/programming-challenges/language-concepts/data-wrangling/json-serialization/json-serialization-in-dotnet/</guid><description>Serialization converts the state of an object (the value of its properties) into a form that can be stored/transmitted. The serialized form doesn&amp;rsquo;t include any information about an object&amp;rsquo;s associated methods.
System.Text.Json emphasizes high performance and low memory allocation over an extensive feature set. It has built-in UTF-8 support because UTF-8 is the most prevalent encoding for data on the web and files on disk.
How to Serialize and Deserialize .</description></item></channel></rss>