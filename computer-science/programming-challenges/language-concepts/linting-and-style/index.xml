<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linting and Style Tooling on Chege's Blog</title><link>https://www.curiosities.dev/computer-science/programming-challenges/language-concepts/linting-and-style/</link><description>Recent content in Linting and Style Tooling on Chege's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 06 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://www.curiosities.dev/computer-science/programming-challenges/language-concepts/linting-and-style/index.xml" rel="self" type="application/rss+xml"/><item><title>.NET Linting and Style Tooling</title><link>https://www.curiosities.dev/computer-science/programming-challenges/language-concepts/linting-and-style/dotnet/</link><pubDate>Sun, 06 Jul 2025 00:00:00 +0000</pubDate><guid>https://www.curiosities.dev/computer-science/programming-challenges/language-concepts/linting-and-style/dotnet/</guid><description>.NET compiler platform (Roslyn) analyzers are included in the .NET SDK and enabled by default in .NET 5 and later. Code analysis violations are prefixed with CA or IDE to differentiate them from compiler errors.
Not to be confused with CS-prefixed messages that are generated by the C# compiler.
Rule Categories Rules fall in one of the following categories:
Design: Adherence to the design guidelines for .</description></item></channel></rss>