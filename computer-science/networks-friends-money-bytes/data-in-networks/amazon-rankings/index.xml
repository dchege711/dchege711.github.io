<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Amazon Rankings on Chege&#39;s Blog</title>
    <link>https://www.curiosities.dev/computer-science/networks-friends-money-bytes/data-in-networks/amazon-rankings/</link>
    <description>Recent content in Amazon Rankings on Chege&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 09 Oct 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://www.curiosities.dev/computer-science/networks-friends-money-bytes/data-in-networks/amazon-rankings/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bayesian Rating</title>
      <link>https://www.curiosities.dev/computer-science/networks-friends-money-bytes/data-in-networks/amazon-rankings/bayesian-ranking/</link>
      <pubDate>Mon, 09 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.curiosities.dev/computer-science/networks-friends-money-bytes/data-in-networks/amazon-rankings/bayesian-ranking/</guid>
      <description>Allows us to weight by review population size.
  Let \(n_i\) be the number of reviews that item \(i\) gets, and let \(r_i\) be the naive average rating of item \(i\)
  Let \(N\) be the total number of reviews across brands, i.e. \(N = \sum_{i} n_i \)
  Let \(R\) be the average rating over all items across brands, i.e. \(R = \frac{1}{N} \sum_{i} n_i r_i \)</description>
    </item>
    
  </channel>
</rss>
