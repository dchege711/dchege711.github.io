<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Privacy Enhancing Techniques on Chege&#39;s Blog</title>
    <link>https://www.curiosities.dev/computer-science/cos432-information-security/14-privacy/privacy-enhancing-tech/</link>
    <description>Recent content in Privacy Enhancing Techniques on Chege&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 22 Jan 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://www.curiosities.dev/computer-science/cos432-information-security/14-privacy/privacy-enhancing-tech/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Secure Multiparty Computation</title>
      <link>https://www.curiosities.dev/computer-science/cos432-information-security/14-privacy/privacy-enhancing-tech/secure-multiparty-computation/</link>
      <pubDate>Tue, 22 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.curiosities.dev/computer-science/cos432-information-security/14-privacy/privacy-enhancing-tech/secure-multiparty-computation/</guid>
      <description>Timeline of Secure Multi-Party Communication  In 1982, secure two-party computation (2PC) was introduced for problems that are boolean predicates, e.g. Yao&amp;rsquo;s Millionaires&#39; Problem   that asks whether \(a \ge b\) is true without revealing the actual values of \(a\) and \(b\).
Andrew Yao generalized 2PC for any feasible computation in 1986. Goldreich, Micali and Wigderson later generalized it to secure multiparty communication.
Yao-based protocols requires that the function to be securely evaluated be represented as a circuit, but an efficient transformation is not trivial.</description>
    </item>
    
  </channel>
</rss>
