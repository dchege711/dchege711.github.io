<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Writing on Chege's Blog</title><link>https://www.curiosities.dev/writing/</link><description>Recent content in Writing on Chege's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 09 Dec 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://www.curiosities.dev/writing/index.xml" rel="self" type="application/rss+xml"/><item><title>Writing Meta</title><link>https://www.curiosities.dev/writing/writing-meta/</link><pubDate>Sun, 17 Apr 2022 00:00:00 +0000</pubDate><guid>https://www.curiosities.dev/writing/writing-meta/</guid><description>The Importance of Clear Writing In science, tech, or management, you influence people by writing things for them to read.
An essay helps you figure something out. Think of it as an idea graph - at each node, pick the most interesting related idea. Expressing your ideas also helps you form them. Writing them down forces you to think well.
I&amp;rsquo;ve noticed this when composing a post to ask why my code is not working.</description></item><item><title>The Writing Process</title><link>https://www.curiosities.dev/writing/the-writing-process/</link><pubDate>Sun, 17 Apr 2022 00:00:00 +0000</pubDate><guid>https://www.curiosities.dev/writing/the-writing-process/</guid><description>Planning: Deciding What and How to Write If you can&amp;rsquo;t envision the audience, think, &amp;ldquo;If someone had needed to give you this info 6 months ago, how should they have done it?&amp;rdquo;
Each section (and sub-section, recursively) should have its purpose.
How is the purpose defined? Maybe each question should be an answer to an implicit question.
If stuck on ordering, first write down ideas in random order, and then sort them.</description></item><item><title>Writing for Software Development</title><link>https://www.curiosities.dev/writing/2021-01-03-writing-for-software-development/</link><pubDate>Sun, 03 Jan 2021 00:00:00 +0000</pubDate><guid>https://www.curiosities.dev/writing/2021-01-03-writing-for-software-development/</guid><description>MUST and MUST NOT; On Writing Documentation Revise documentation, many times, and on separate days to catch confusing parts.
Beware of ambiguities, e.g. X may not do Y. Refer to definitions, e.g. RFC 2119 .
Put yourself into different roles, e.g. the person just looking for samples, the person who wants to read up on every nook and crany, the person who has no technical background etc.</description></item><item><title>[Orwell] Politics and the English Language</title><link>https://www.curiosities.dev/writing/1946-04-01-politics-and-the-english-language/</link><pubDate>Mon, 01 Apr 1946 00:00:00 +0000</pubDate><guid>https://www.curiosities.dev/writing/1946-04-01-politics-and-the-english-language/</guid><description>But an effect can become a cause, reinforcing the original cause and producing the same effect in intensified form. The language becomes ugly and inaccurate because our thoughts are foolish, but the slovenliness of our language makes it easy for us to have foolish thoughts. The point is that the process is reversible.
Standard phrases already have rhythm. They are a convenient shortcut for lazy communicators.
Pretentious diction to make the banal appear profound, the biased seem scientifically impartial and sordid events masquerade as dignified.</description></item></channel></rss>