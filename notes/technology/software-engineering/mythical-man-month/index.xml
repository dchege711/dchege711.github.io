<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mythical Man Month [Book] on c13u&#39;s Blog</title>
    <link>https://www.c13u.com/notes/technology/software-engineering/mythical-man-month/</link>
    <description>Recent content in Mythical Man Month [Book] on c13u&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 01 Oct 1974 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.c13u.com/notes/technology/software-engineering/mythical-man-month/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>01. The Tar Pit</title>
      <link>https://www.c13u.com/notes/technology/software-engineering/mythical-man-month/brooks-01-the-tar-pit/</link>
      <pubDate>Tue, 01 Oct 1974 00:00:00 +0000</pubDate>
      
      <guid>https://www.c13u.com/notes/technology/software-engineering/mythical-man-month/brooks-01-the-tar-pit/</guid>
      <description>The fiercer the struggle, the more entangling the tar, and no beast is so strong or so skillful but that he ultimately sinks.
The Programming Systems Product How do 2 programmers in a remodeled garage build an important program that surpasses the best efforts of large teams?
A Program Garage duos typically build a program: complete in itself, ready to be run by the author on the system on which it was developed.</description>
    </item>
    
    <item>
      <title>02. The Mythical Man-Month</title>
      <link>https://www.c13u.com/notes/technology/software-engineering/mythical-man-month/brooks-02-the-mythical-man-month/</link>
      <pubDate>Tue, 01 Oct 1974 00:00:00 +0000</pubDate>
      
      <guid>https://www.c13u.com/notes/technology/software-engineering/mythical-man-month/brooks-02-the-mythical-man-month/</guid>
      <description>More software projects have gone awry for lack of calendar time than for all other causes combined.
Why is this cause of disaster so common?  Our estimation techniques assume that all will go well, i.e. each task will take only as long as it &amp;ldquo;ought&amp;rdquo; to take. Our estimating techniques fallaciously confuse effort with progress, hiding the assumption that men and months are interchangeable. Because we are uncertain of our estimates, software managers often lack the courteous stubbornness - if you&#39;re made to wait, it is to serve you better, and to please you.</description>
    </item>
    
  </channel>
</rss>