const INDEXABLE_FIELDS=["body","tags","origins","title"];const DATE_FORMATTER=Intl.DateTimeFormat("default",{year:"numeric",month:"long",day:"numeric"});var idx=lunr(function(){this.ref("position_in_index");INDEXABLE_FIELDS.forEach((indexedField)=>{this.field(indexedField);})
this.metadataWhitelist=["position"];searchableContent.forEach(function(doc){this.add(doc);},this);});function queryProcessor(event){if(event.isComposing||event.keyCode===229)return;if(event.keyCode===13){event.preventDefault();displaySearchResults(event.srcElement.innerText);}}
window.onload=()=>{const searchQueryElement=document.getElementById("searchQuery");searchQueryElement.addEventListener("keydown",queryProcessor);const searchParams=new URLSearchParams(window.location.search);if(searchParams.has("q")){searchQueryElement.innerText=searchParams.get("q");displaySearchResults(searchParams.get("q"));}}
function displaySearchResults(query){let trimmedQuery=query.trim();if(trimmedQuery.length===0)return;let startTime=Date.now();let searchResults=idx.search(trimmedQuery);let searchResultsHTML="";for(let i=0;i<searchResults.length;i++){let res=searchResults[i];let doc=searchableContent[res.ref];let highlightingGuide={}
INDEXABLE_FIELDS.forEach((field)=>{highlightingGuide[field]=[];});let metadataKeys=Object.keys(res.matchData.metadata);metadataKeys.forEach((key)=>{let obj=res.matchData.metadata[key]
let fields=Object.keys(obj);fields.forEach((field)=>{obj[field].position.forEach((matchPos)=>{highlightingGuide[field].push(matchPos);});});});searchResultsHTML+=createAnnotatedSearchResult(res.ref,highlightingGuide);}
let searchMetadataHTML=`<p class="meta">
    ${searchResults.length} results in 
    ${(Date.now()-startTime)/1000} seconds. 
    Powered by <a href="https://lunrjs.com/">Lunr JS</a></p>`;document.getElementById("searchResults").innerHTML=`${searchMetadataHTML}${searchResultsHTML}`;document.title=`${query} | c13u Search`;}
function createAnnotatedSearchResult(docIdx,matchInfo){let doc=searchableContent[docIdx];function annotateEntireContent(originalMarkup,relevantMatchInfo){if(!originalMarkup||!relevantMatchInfo)return "";let annotatedContent="";let startIdx=0;relevantMatchInfo.forEach((matchPos)=>{annotatedContent+=originalMarkup.substr(startIdx,matchPos[0]-startIdx);annotatedContent+=`<span class="search-hit">`;annotatedContent+=originalMarkup.substr(matchPos[0],matchPos[1]);annotatedContent+="</span>";startIdx=matchPos[0]+matchPos[1];});annotatedContent+=originalMarkup.substr(startIdx);return annotatedContent;}
let annotatedTitle=annotateEntireContent(doc.title,matchInfo.title);if(!doc.equivalent_urls){annotatedTitle=`<a href="${doc.url}">${annotatedTitle}</a>`;}
let originalBody=doc.body;let annotatedBody="";matchInfo.body.forEach((matchPos,k)=>{let i=matchPos[0];while(i>0&&originalBody[i]!=="\n")i-=1;let j=matchPos[0]+matchPos[1];while(j<originalBody.length&&originalBody[j]!=="\n")j+=1;if(k===0)annotatedBody+="... ";annotatedBody+=`${originalBody.slice(i,matchPos[0])}`;annotatedBody+=`<span class="search-hit">`;annotatedBody+=originalBody.substr(matchPos[0],matchPos[1]);annotatedBody+=`</span>`;annotatedBody+=`${originalBody.slice(matchPos[0]+matchPos[1],j+1)}... `;});let annotatedTags="";if(doc.tags){let individualTags=doc.tags.split(/\s+/);let annotatedContent=annotateEntireContent(doc.tags,matchInfo.tags);individualTags.forEach((tag)=>{annotatedContent=annotatedContent.replace(tag,`<a href="/tags/${tag}">${tag}</a>`)});annotatedTags=`Tags: ${annotatedContent}`;}
let urlMarkup="";if(doc.equivalent_urls){doc.equivalent_urls.forEach((url)=>{urlMarkup+=`<p class="meta"><a href="${url}">${url}</a></p>`;});}else{urlMarkup=`<a href="${doc.url}">${doc.url}</a>`;}
return `<div>
    ${annotatedTitle}
    <p class="meta">
      ${DATE_FORMATTER.format((new Date(doc.date)))}; ${annotatedTags}
    </p>
    <p class="meta">${urlMarkup}</p>
    <p class="snippet">${annotatedBody}</p>
  </div>`;}