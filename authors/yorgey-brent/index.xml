<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Yorgey, Brent on Chege&#39;s Blog</title>
    <link>https://www.curiosities.dev/authors/yorgey-brent/</link>
    <description>Recent content in Yorgey, Brent on Chege&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 22 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://www.curiosities.dev/authors/yorgey-brent/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Learning Haskell via AoC 2021</title>
      <link>https://www.curiosities.dev/computer-science/programming-challenges/advent-of-code/2021/haskell-meta/</link>
      <pubDate>Sat, 19 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.curiosities.dev/computer-science/programming-challenges/advent-of-code/2021/haskell-meta/</guid>
      <description>This page contains remarks on Haskell that I encountered when working with source files that span multiple AoC 2021 problems.
 and  have Haskell solutions. It&amp;rsquo;ll be nice to compare how they solved the problems. I don&amp;rsquo;t want to end up perfecting the wrong approach!
Setting Up Haskell Env for AoC To manage dependencies, Cabal   and Stack   are pretty popular. Stack incorporates the Cabal build system.</description>
    </item>
    
    <item>
      <title>AoC 2021 Day 01: Sonar Sweep</title>
      <link>https://www.curiosities.dev/computer-science/programming-challenges/advent-of-code/2021/src/SonarSweep/SonarSweep/</link>
      <pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.curiosities.dev/computer-science/programming-challenges/advent-of-code/2021/src/SonarSweep/SonarSweep/</guid>
      <description>Day 1 - Advent of Code 2021: Sonar Sweep.  adventofcode.com  .  Accessed Feb 18, 2022.  Part One As the submarine drops below the surface of the ocean, it automatically performs a sonar sweep of the nearby sea floor. On a small screen, the sonar weep report (your puzzle input) appears: each line is a measurement of the sea floor depth as the sweep looks further and further away from the submarine.</description>
    </item>
    
    <item>
      <title>021. Amicable Numbers</title>
      <link>https://www.curiosities.dev/computer-science/programming-challenges/project-euler/021-amicable-numbers/021-amicable-numbers/</link>
      <pubDate>Sat, 06 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.curiosities.dev/computer-science/programming-challenges/project-euler/021-amicable-numbers/021-amicable-numbers/</guid>
      <description>Problem Statement  Let \(d(n)\) be defined as the sum of proper divisors of \(n\) (numbers less than \(n\) which divide evenly into \(n\)).
If \(d(a) = b\) and \(d(b) = a\), where \(a \neq b\), then \(a\) and \(b\) are an amicable pair and each of \(a\) and \(b\) are called amicable numbers.
For example, the proper divisors of \(220\) are \(1, 2, 4, 5, 10, 11, 20, 22, 44, 55, 110\); therefore \(d(220) = 284\).</description>
    </item>
    
  </channel>
</rss>
