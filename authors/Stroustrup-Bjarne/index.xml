<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Stroustrup, Bjarne on Chege&#39;s Blog</title>
    <link>https://www.curiosities.dev/authors/Stroustrup-Bjarne/</link>
    <description>Recent content in Stroustrup, Bjarne on Chege&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 30 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://www.curiosities.dev/authors/Stroustrup-Bjarne/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Classes</title>
      <link>https://www.curiosities.dev/computer-science/programming-challenges/language-concepts/classes/</link>
      <pubDate>Mon, 30 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.curiosities.dev/computer-science/programming-challenges/language-concepts/classes/</guid>
      <description>A class is a user-defined type provided to represent a concept in the code of a program. 
  A Tour of C&amp;#43;&amp;#43; (Second Edition). Chapter 4. Classes.  Bjarne Stroustrup. 2018. ISBN: 978-0-13-499783-4 .     </description>
    </item>
    
    <item>
      <title>Templates in C&#43;&#43;</title>
      <link>https://www.curiosities.dev/computer-science/programming-challenges/language-concepts/parameterization/templates-cpp/</link>
      <pubDate>Mon, 30 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.curiosities.dev/computer-science/programming-challenges/language-concepts/parameterization/templates-cpp/</guid>
      <description>A template is a class or a function that we can parameterize with a set of types or values. 
Parameterized Types The vector-of-doubles   can be generalized to a vector-of-anything type by making it a template:
// `template&amp;lt;typename T&amp;gt;` can be read as &amp;#34;for all types T&amp;#34;. Older code // uses `template&amp;lt;classs T&amp;gt;`, which is equivalent. template&amp;lt;typename T&amp;gt; class Vector { public: explicit Vector(int s); ~Vector() { delete[] elem; } // .</description>
    </item>
    
    <item>
      <title>Classes in C&#43;&#43;</title>
      <link>https://www.curiosities.dev/computer-science/programming-challenges/language-concepts/classes/classes-in-cpp/</link>
      <pubDate>Thu, 12 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.curiosities.dev/computer-science/programming-challenges/language-concepts/classes/classes-in-cpp/</guid>
      <description>quotes Doug McIlroy:
 Those types are not &amp;ldquo;abstract&amp;rdquo;; they are as real as int and float.
 What is the context of this quote?
  A class is a user-defined type provided to represent a concept in the code of a program. Essentially, all language facilities beyond the fundamental types, operators, and statements exist to help define better class or to use them more conveniently.</description>
    </item>
    
  </channel>
</rss>
