<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Luo, Xiapu on Chege&#39;s Blog</title>
    <link>https://www.curiosities.dev/authors/luo-xiapu/</link>
    <description>Recent content in Luo, Xiapu on Chege&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 04 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.curiosities.dev/authors/luo-xiapu/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Online Markets</title>
      <link>https://www.curiosities.dev/trading-and-investing/2021-10-04-online-markets/</link>
      <pubDate>Mon, 04 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.curiosities.dev/trading-and-investing/2021-10-04-online-markets/</guid>
      <description>WWW &amp;lsquo;21: The Web Conference 2021 REST: Relational Event-Driven Stock Trend Forecasting REST, an event-driven stock trend forecasting framework, that overcomes two limitations of existing event-driven models. Models the stock context, and learns the effect of event information on the stocks under different contexts. Constructs a stock graph and designs a new propagation layer to propagate the effect of event information from related stocks. 
The value of stock trend forecasting is not unanimous, e.</description>
    </item>
    
    <item>
      <title>Software Dependencies</title>
      <link>https://www.curiosities.dev/computer-science/2020-11-14-software-dependencies/</link>
      <pubDate>Sat, 14 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.curiosities.dev/computer-science/2020-11-14-software-dependencies/</guid>
      <description>Bloated Dependencies A bloated dependency is one which is packaged in the application binary, but is not needed to run the application.
There are two levels to this: (1) a source file declares a dependency on foo but never actually uses foo, and (2) the application as a whole never uses foo. An optimal de-bloating solution would first address (1) and then tackle (2).
Some languages may have better tooling than others when it comes to automatically de-bloating their dependencies.</description>
    </item>
    
  </channel>
</rss>
