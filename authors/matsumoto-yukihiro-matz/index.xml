<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Matsumoto, Yukihiro &#39;Matz&#39; on Chege&#39;s Blog</title>
    <link>https://www.curiosities.dev/authors/Matsumoto-Yukihiro-Matz/</link>
    <description>Recent content in Matsumoto, Yukihiro &#39;Matz&#39; on Chege&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 21 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://www.curiosities.dev/authors/Matsumoto-Yukihiro-Matz/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>On Systems Programming</title>
      <link>https://www.curiosities.dev/computer-science/2020-11-21-on-systems-programming/</link>
      <pubDate>Sat, 21 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.curiosities.dev/computer-science/2020-11-21-on-systems-programming/</guid>
      <description>Garbage Collection Garbage Collection is about simulating a computer with infinite memory. Consequently, if you have more RAM than your program will ever need, then a null garbage collector is a valid one.  
Traits of Beautiful Code   is the chief designer of Ruby, and thus the frequent illustrations and praises for Ruby.
How do other chief designers explain their rationale? For instance, what would Java&amp;rsquo;s designer say to &amp;rsquo;s criticism?</description>
    </item>
    
  </channel>
</rss>
