<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Allison, Chuck on Chege&#39;s Blog</title>
    <link>https://www.curiosities.dev/authors/allison-chuck/</link>
    <description>Recent content in Allison, Chuck on Chege&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 28 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.curiosities.dev/authors/allison-chuck/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Observer</title>
      <link>https://www.curiosities.dev/computer-science/gang-of-four-design-patterns/behavioral-patterns/07-observer/</link>
      <pubDate>Tue, 28 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.curiosities.dev/computer-science/gang-of-four-design-patterns/behavioral-patterns/07-observer/</guid>
      <description>notes that , the primary source, glosses over nitty-gritties. e.g. the &amp;ldquo;message queue&amp;rdquo; server. Maybe reading through these will provide a larger perspective to design decisions made in Chromium regarding observers.
  Intent A one-to-many dependency between object so that when one object (subject) changes, all its dependents (observers) are notified and update automatically.
A meta-point is that while we could achieve consistency by making the classes tightly coupled, we don&amp;rsquo;t want to do that because tight coupling reduces reusability.</description>
    </item>
    
  </channel>
</rss>
